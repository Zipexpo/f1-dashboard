{"version":3,"file":"static/js/882.9b44b771.chunk.js","mappings":"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","sources":["components/viz/lineChart/index.js","components/viz/Ribbon/index.js","components/viz/Splom/index.js","components/viz/PCA/PCA.js","components/viz/PCA/index.js","views/viz/index.js"],"sourcesContent":["import Plot from 'react-plotly.js';\r\n\r\nimport {useEffect, useState, useTransition} from \"react\";\r\n\r\nconst initData=[];\r\nconst domain=[undefined,undefined];\r\nconst layout={title:{text:'',pad:0},margin:{t:10,l:50,b:20,r:30}}\r\nconst LineChart = ({data=initData,xKey,yKey,cKey,colorDomain=domain,mode='line',showscale})=>{\r\n    const [isPending,startTransition] = useTransition();\r\n    const [plotdata,setPlotdata] = useState(initData);\r\n    const [colordata,setColordata] = useState([]);\r\n    useEffect(()=>{\r\n        startTransition(()=>{\r\n            const x=[];\r\n            const y=[];\r\n            data.forEach(d=>{\r\n                x.push(d[xKey]);\r\n                y.push(d[yKey]);\r\n            })\r\n            setPlotdata({\r\n                x,\r\n                y,\r\n            })\r\n        })\r\n    },[xKey,yKey,data]);\r\n    useEffect(()=>{\r\n        if (mode==='markers'){\r\n            debugger\r\n            if (cKey) {\r\n                setColordata(data.map(d=>d[cKey]));\r\n            }else {\r\n                setColordata([]);\r\n            }\r\n        }else\r\n            setColordata([]);\r\n    },[data,cKey,mode])\r\n    const plotopt = [{\r\n        x:plotdata.x,\r\n        y:plotdata.y,\r\n        type: 'scatter',\r\n        mode\r\n        // marker: {color: 'red'},\r\n    }];\r\n    console.log(colorDomain)\r\n    if (colordata.length)\r\n        plotopt[0].marker = {color:colordata, colorscale: \"Portland\",colorbarTitleText: cKey,\r\n            colorbarThickness:5,\r\n            showscale,\r\n            cmin:colorDomain[0],cmax:colorDomain[1]\r\n    }\r\n\r\n    // console.log(JSON.stringify(spec.data.values))\r\n    return (<Plot data={plotopt} style={{width: '100%',height:'100%'}} layout={layout} useResizeHandler={true}/>)\r\n}\r\n\r\nexport default LineChart","import Plot from 'react-plotly.js';\r\n\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nconst initData = [];\r\nconst layout={title:{text:'',pad:0},margin:{t:10,l:50,b:20,r:10}}\r\nconst Chart = ({data=initData, getArr,getName,xKey,yKey,zKey,mode='line'})=>{\r\n    const [plotdata,setPlotdata] = useState(initData);\r\n    useEffect(()=>{\r\n        debugger\r\n        const traceData = data.map(t=>{\r\n            const x=[];\r\n            const y=[];\r\n            const z=[];\r\n            getArr(t).forEach(d=>{\r\n                x.push(d[xKey]);\r\n                y.push(d[yKey]);\r\n                z.push(d[zKey]);\r\n            })\r\n            return{\r\n                name:getName(t),\r\n                x,\r\n                y,\r\n                z,\r\n            }\r\n        })\r\n        setPlotdata(traceData)\r\n    },[xKey,yKey,zKey,data]);\r\n    const plotopt = useMemo(()=>{\r\n        return plotdata.map(d=>({\r\n            ...d,\r\n            type: 'scatter3d',\r\n            colorscale: \"Portland\",\r\n            mode: 'markers',\r\n            marker:{size:3}\r\n        }))\r\n    },[plotdata]);\r\n\r\n    // console.log(JSON.stringify(spec.data.values))\r\n    return (<Plot data={plotopt} style={{width: '100%',height:'100%'}} layout={{...layout,\r\n        scene: {\r\n            xaxis: {\r\n                title: {text: xKey}\r\n            },\r\n            yaxis: {\r\n                title: {text: yKey}\r\n            },\r\n            zaxis: {\r\n                title: {text: zKey}\r\n            }\r\n        }\r\n    }} useResizeHandler={true}/>)\r\n\r\n}\r\n\r\nexport default Chart;","import Plot from 'react-plotly.js';\r\n\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nconst initData = [];\r\nconst initLayout={title:{text:'',pad:0},margin:{t:10,l:50,b:50,r:10},\r\n    hovermode:'closest',\r\n    dragmode:'select',\r\n    plot_bgcolor:'rgba(240,240,240, 0.95)',\r\n    grid:{roworder:'bottom to top'}\r\n};\r\n\r\nconst Chart = ({data=initData, getArr,getName,dimensionKeys,mode='line'})=>{\r\n    const [plotdata,setPlotdata] = useState(initData);\r\n    const [layout,setLayout] = useState(initLayout);\r\n    useEffect(()=>{\r\n        const traceData = data.map(t=>{\r\n            const dimensions = dimensionKeys.map(k=> ({label:k, values:[]}));\r\n            getArr(t).forEach(d=>{\r\n                dimensions.forEach((k)=>{\r\n                    k.values.push(d[k.label]);\r\n                });\r\n            })\r\n            return {\r\n                type: 'splom',\r\n                name:getName(t),\r\n                dimensions,\r\n                marker: {\r\n                    size: 5,\r\n                    line: {\r\n                        color: 'white',\r\n                        width: 0.5\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        setPlotdata(traceData)\r\n    },[dimensionKeys,data]);\r\n    useEffect(()=>{\r\n        const layout = {...initLayout};\r\n        dimensionKeys.forEach((k,i)=> {\r\n            layout[`xaxis${i}`] = axis()\r\n            layout[`yaxis${i}`] = axis()\r\n        })\r\n        setLayout(layout)\r\n    },[dimensionKeys])\r\n    const axis = () => ({\r\n        showline:false,\r\n        zeroline:false,\r\n        gridcolor:'#ffff',\r\n        ticklen:4\r\n    })\r\n    // console.log(JSON.stringify(spec.data.values))\r\n    return (<Plot data={plotdata} style={{width: '100%',height:'100%'}} layout={layout} useResizeHandler={true}/>)\r\n\r\n}\r\n\r\nexport default Chart;","import * as d3 from 'd3'\r\nexport const PCA = function(){\r\n    this.scale = scale;\r\n    this.pca = pca;\r\n\r\n    function mean(X){\r\n        // mean by col\r\n        var T = transpose(X);\r\n        return T.map(function(row){ return d3.sum(row) / X.length; });\r\n    }\r\n\r\n    function transpose(X){\r\n        return d3.range(X[0].length).map(function(i){\r\n            return X.map(function(row){ return row[i]; });\r\n        });\r\n    }\r\n\r\n    function dot(X,Y){\r\n        return X.map(function(row){\r\n            return transpose(Y).map(function(col){\r\n                return d3.sum(d3.zip(row,col).map(function(v){\r\n                    return v[0]*v[1];\r\n                }));\r\n            });\r\n        });\r\n    }\r\n\r\n    function diag(X){\r\n        return d3.range(X.length).map(function(i){\r\n            return d3.range(X.length).map(function(j){ return (i === j) ? X[i] : 0; });\r\n        });\r\n    }\r\n\r\n    function zeros(i,j){\r\n        return d3.range(i).map(function(row){\r\n            return d3.range(j).map(function(){ return 0; });\r\n        });\r\n    }\r\n\r\n    function trunc(X,d){\r\n        return X.map(function(row){\r\n            return row.map(function(x){ return (x < d) ? 0 : x; });\r\n        });\r\n    }\r\n\r\n    function same(X,Y){\r\n        return d3.zip(X,Y).map(function(v){\r\n            return d3.zip(v[0],v[1]).map(function(w){ return w[0] === w[1]; });\r\n        }).map(function(row){\r\n            return row.reduce(function(x,y){ return x*y; });\r\n        }).reduce(function(x,y){ return x*y; });\r\n    }\r\n\r\n    function std(X){\r\n        var m = mean(X);\r\n        return sqrt(mean(mul(X,X)));//, mul(m,m));\r\n    }\r\n\r\n    function sqrt(V){\r\n        return V.map(function(x){ return Math.sqrt(x); });\r\n    }\r\n\r\n    function mul(X,Y){\r\n        return d3.zip(X,Y).map(function(v){\r\n            if (typeof(v[0]) === 'number') return v[0]*v[1];\r\n            return d3.zip(v[0],v[1]).map(function(w){ return w[0]*w[1]; });\r\n        });\r\n    }\r\n\r\n    function sub(x,y){\r\n        console.assert(x.length === y.length, 'dim(x) == dim(y)');\r\n        return d3.zip(x,y).map(function(v){\r\n            if (typeof(v[0]) === 'number') return v[0]-v[1];\r\n            else return d3.zip(v[0],v[1]).map(function(w){ return w[0]-w[1]; });\r\n        });\r\n    }\r\n\r\n    function div(x,y){\r\n        console.assert(x.length === y.length, 'dim(x) == dim(y)');\r\n        return d3.zip(x,y).map(function(v){ return v[1]!==0 ? v[0]/(v[1]): 0; });\r\n\r\n    }\r\n\r\n    function scale(X, center, scale){\r\n        // compatible with R scale()\r\n        if (center){\r\n            var m = mean(X);\r\n            X = X.map(function(row){ return sub(row, m); });\r\n        }\r\n\r\n        if (scale){\r\n            var s = std(X);\r\n            X = X.map(function(row){ return div(row, s); });\r\n        }\r\n        return X;\r\n    }\r\n\r\n    // translated from http://stitchpanorama.sourceforge.net/Python/svd.py\r\n    function svd(A){\r\n        var temp;\r\n        // Compute the thin SVD from G. H. Golub and C. Reinsch, Numer. Math. 14, 403-420 (1970)\r\n        var prec = Math.pow(2,-52); // assumes double prec\r\n        var tolerance = 1.e-64/prec;\r\n        var itmax = 50;\r\n        var c = 0;\r\n        var i = 0;\r\n        var j = 0;\r\n        var k = 0;\r\n        var l = 0;\r\n\r\n        var u = A.map(function(row){ return row.slice(0); });\r\n        var m = u.length;\r\n        var n = u[0].length;\r\n\r\n        console.assert(m >= n, 'Need more rows than columns');\r\n\r\n        var e = d3.range(n).map(function(){ return 0; });\r\n        var q = d3.range(n).map(function(){ return 0; });\r\n        var v = zeros(n,n);\r\n\r\n        function pythag(a,b){\r\n            a = Math.abs(a);\r\n            b = Math.abs(b);\r\n            if (a > b)\r\n                return a*Math.sqrt(1.0+(b*b/a/a));\r\n            else if (b === 0)\r\n                return a;\r\n            return b*Math.sqrt(1.0+(a*a/b/b));\r\n        }\r\n\r\n        // Householder's reduction to bidiagonal form\r\n        var f = 0;\r\n        var g = 0;\r\n        var h = 0;\r\n        var x = 0;\r\n        var y = 0;\r\n        var z = 0;\r\n        var s = 0;\r\n\r\n        for (i=0; i < n; i++)\r\n        {\r\n            e[i]= g;\r\n            s= 0.0;\r\n            l= i+1;\r\n            for (j=i; j < m; j++)\r\n                s += (u[j][i]*u[j][i]);\r\n            if (s <= tolerance)\r\n                g= 0.0;\r\n            else\r\n            {\r\n                f= u[i][i];\r\n                g= Math.sqrt(s);\r\n                if (f >= 0.0) g= -g;\r\n                h= f*g-s;\r\n                u[i][i]=f-g;\r\n                for (j=l; j < n; j++)\r\n                {\r\n                    s= 0.0;\r\n                    for (k=i; k < m; k++)\r\n                        s += u[k][i]*u[k][j]\r\n                    f= s/h;\r\n                    for (k=i; k < m; k++)\r\n                        u[k][j]+=f*u[k][i]\r\n                }\r\n            }\r\n            q[i]= g;\r\n            s= 0.0;\r\n            for (j=l; j < n; j++)\r\n                s= s + u[i][j]*u[i][j]\r\n            if (s <= tolerance)\r\n                g= 0.0;\r\n            else\r\n            {\r\n                f= u[i][i+1];\r\n                g= Math.sqrt(s);\r\n                if (f >= 0.0) g= -g;\r\n                h= f*g - s;\r\n                u[i][i+1] = f-g;\r\n                for (j=l; j < n; j++) e[j]= u[i][j]/h\r\n                for (j=l; j < m; j++)\r\n                {\r\n                    s=0.0;\r\n                    for (k=l; k < n; k++)\r\n                        s += (u[j][k]*u[i][k])\r\n                    for (k=l; k < n; k++)\r\n                        u[j][k]+=s*e[k]\r\n                }\r\n            }\r\n            y= Math.abs(q[i])+Math.abs(e[i]);\r\n            if (y>x)\r\n                x=y;\r\n        }\r\n\r\n        // accumulation of right hand gtransformations\r\n        for (i = n-1; i !== -1; i+= -1)\r\n        {\r\n            if (g !== 0.0)\r\n            {\r\n                h= g*u[i][i+1];\r\n                for (j=l; j < n; j++)\r\n                    v[j][i]=u[i][j]/h\r\n                for (j=l; j < n; j++)\r\n                {\r\n                    s=0.0;\r\n                    for (k=l; k < n; k++)\r\n                        s += u[i][k]*v[k][j]\r\n                    for (k=l; k < n; k++)\r\n                        v[k][j]+=(s*v[k][i])\r\n                }\r\n            }\r\n            for (j=l; j < n; j++)\r\n            {\r\n                v[i][j] = 0;\r\n                v[j][i] = 0;\r\n            }\r\n            v[i][i] = 1;\r\n            g= e[i];\r\n            l= i\r\n        }\r\n\r\n        // accumulation of left hand transformations\r\n        for (i=n-1; i !== -1; i+= -1)\r\n        {\r\n            l= i+1;\r\n            g= q[i];\r\n            for (j=l; j < n; j++)\r\n                u[i][j] = 0;\r\n            if (g !== 0.0)\r\n            {\r\n                h= u[i][i]*g;\r\n                for (j=l; j < n; j++)\r\n                {\r\n                    s=0.0;\r\n                    for (k=l; k < m; k++) s += u[k][i]*u[k][j];\r\n                    f= s/h;\r\n                    for (k=i; k < m; k++) u[k][j]+=f*u[k][i];\r\n                }\r\n                for (j=i; j < m; j++) u[j][i] = u[j][i]/g;\r\n            }\r\n            else\r\n                for (j=i; j < m; j++) u[j][i] = 0;\r\n            u[i][i] += 1;\r\n        }\r\n\r\n        // diagonalization of the bidiagonal form\r\n        prec= prec*x;\r\n        for (k=n-1; k !== -1; k+= -1)\r\n        {\r\n            for (var iteration=0; iteration < itmax; iteration++)\r\n            {// test f splitting\r\n                var test_convergence = false;\r\n                for (l=k; l !== -1; l+= -1)\r\n                {\r\n                    if (Math.abs(e[l]) <= prec){\r\n                        test_convergence= true;\r\n                        break\r\n                    }\r\n                    if (Math.abs(q[l-1]) <= prec)\r\n                        break\r\n                }\r\n                if (!test_convergence){\r\n                    // cancellation of e[l] if l>0\r\n                    c= 0.0;\r\n                    s= 1.0;\r\n                    var l1= l-1;\r\n                    for (i =l; i<k+1; i++)\r\n                    {\r\n                        f= s*e[i];\r\n                        e[i]= c*e[i];\r\n                        if (Math.abs(f) <= prec)\r\n                            break;\r\n                        g= q[i];\r\n                        h= pythag(f,g);\r\n                        q[i]= h;\r\n                        c= g/h;\r\n                        s= -f/h;\r\n                        for (j=0; j < m; j++)\r\n                        {\r\n                            y= u[j][l1];\r\n                            z= u[j][i];\r\n                            u[j][l1] =  y*c+(z*s);\r\n                            u[j][i] = -y*s+(z*c);\r\n                        }\r\n                    }\r\n                }\r\n                // test f convergence\r\n                z= q[k];\r\n                if (l=== k){\r\n                    //convergence\r\n                    if (z<0.0)\r\n                    { //q[k] is made non-negative\r\n                        q[k]= -z;\r\n                        for (j=0; j < n; j++)\r\n                            v[j][k] = -v[j][k]\r\n                    }\r\n                    break  //break out of iteration loop and move on to next k value\r\n                }\r\n\r\n                console.assert(iteration < itmax-1, 'Error: no convergence.');\r\n\r\n                // shift from bottom 2x2 minor\r\n                x= q[l];\r\n                y= q[k-1];\r\n                g= e[k-1];\r\n                h= e[k];\r\n                f= ((y-z)*(y+z)+(g-h)*(g+h))/(2.0*h*y);\r\n                g= pythag(f,1.0);\r\n                if (f < 0.0)\r\n                    f= ((x-z)*(x+z)+h*(y/(f-g)-h))/x;\r\n                else\r\n                    f= ((x-z)*(x+z)+h*(y/(f+g)-h))/x;\r\n                // next QR transformation\r\n                c= 1.0;\r\n                s= 1.0;\r\n                for (i=l+1; i< k+1; i++)\r\n                {\r\n                    g = e[i];\r\n                    y = q[i];\r\n                    h = s*g;\r\n                    g = c*g;\r\n                    z = pythag(f,h);\r\n                    e[i-1] = z;\r\n                    c = f/z;\r\n                    s = h/z;\r\n                    f = x*c+g*s;\r\n                    g = -x*s+g*c;\r\n                    h = y*s;\r\n                    y = y*c;\r\n                    for (j =0; j < n; j++)\r\n                    {\r\n                        x = v[j][i-1];\r\n                        z = v[j][i];\r\n                        v[j][i-1]  = x*c+z*s;\r\n                        v[j][i]  = -x*s+z*c;\r\n                    }\r\n                    z = pythag(f,h);\r\n                    q[i-1] = z;\r\n                    c = f/z;\r\n                    s = h/z;\r\n                    f = c*g+s*y;\r\n                    x = -s*g+c*y;\r\n                    for (j =0; j < m; j++)\r\n                    {\r\n                        y = u[j][i-1];\r\n                        z = u[j][i];\r\n                        u[j][i-1]  = y*c+z*s;\r\n                        u[j][i]  = -y*s+z*c;\r\n                    }\r\n                }\r\n                e[l] = 0.0;\r\n                e[k] = f;\r\n                q[k] = x;\r\n            }\r\n        }\r\n\r\n        // vt = transpose(v)\r\n        // return (u,q,vt)\r\n        for (i=0;i<q.length; i++)\r\n            if (q[i] < prec) q[i] = 0;\r\n\r\n        // sort eigenvalues\r\n        for (i=0; i< n; i++){\r\n            // writeln(q)\r\n            for (j=i-1; j >= 0; j--){\r\n                if (q[j] < q[i]){\r\n                    // writeln(i,'-',j)\r\n                    c = q[j];\r\n                    q[j] = q[i];\r\n                    q[i] = c;\r\n                    for (k=0;k<u.length;k++) { temp = u[k][i]; u[k][i] = u[k][j]; u[k][j] = temp; }\r\n                    for (k=0;k<v.length;k++) { temp = v[k][i]; v[k][i] = v[k][j]; v[k][j] = temp; }\r\n                    i = j\r\n                }\r\n            }\r\n        }\r\n        return { U:u, S:q, V:v }\r\n    }\r\n\r\n    function pca(X,npc){\r\n        var USV = svd(X);\r\n        var U = USV.U;\r\n        var S = diag(USV.S);\r\n        var V = USV.V;\r\n\r\n        // T = X*V = U*S\r\n        var pcXV = dot(X,V);\r\n        var pcUdS = dot(U,S);\r\n\r\n        // var prod = trunc(sub(pcXV,pcUdS), 1e-11);\r\n        var prod = trunc(sub(pcXV,pcUdS), 1e-12);\r\n        var zero = zeros(prod.length, prod[0].length);\r\n        console.assert(same(prod,zero), 'svd and eig ways must be the same.');\r\n        var twomost = [];\r\n        for (var ipc =0; ipc<npc; ipc++)\r\n            twomost.push(ipc);\r\n\r\n        for (var i in USV.S) {\r\n            for (var ipc =0; ipc<npc; ipc++) {\r\n                if (USV.S[i]>=USV.S[twomost[ipc]]) {\r\n                    twomost[ipc] = parseInt(i);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return [pcUdS,V,twomost,S] ;\r\n    }\r\n};","import Plot from 'react-plotly.js';\r\nimport {range as d3range, extent as d3extent, max as d3max, sum as d3sum} from 'd3';\r\nimport {PCA} from './PCA'\r\n\r\nimport {useEffect, useMemo, useState, useTransition} from \"react\";\r\nconst initData = [];\r\nconst initLayout={title:{text:'',pad:0},margin:{t:10,l:50,b:50,r:10},\r\n};\r\n\r\nconst DIM = 2;\r\n\r\nconst Chart = ({data=initData, getArr,getName,dimensionKeys,mode='line'})=>{\r\n    const [plotdata,setPlotdata] = useState(initData);\r\n    const [layout,setLayout] = useState(initLayout);\r\n    const [isPending,startTransition] = useTransition();\r\n    useEffect(()=>{\r\n        startTransition(()=>{\r\n            try {\r\n                const dataIn = [];\r\n                const traceIndex = [];\r\n                data.forEach((t, ti) => {\r\n                    traceIndex[ti] = [];\r\n                    getArr(t).forEach(d => {\r\n                        let item = dimensionKeys.map((k) => +d[k]);\r\n                        traceIndex[ti].push(dataIn.length);\r\n                        dataIn.push(item);\r\n                    })\r\n                })\r\n                debugger\r\n                const {solution, feature,contribute} = calculatePCA(dataIn, dimensionKeys);\r\n                const traceData = data.map((t, ti) => {\r\n                    return {\r\n                        type: 'scatters',\r\n                        mode: 'markers',\r\n                        name: getName(t),\r\n                        x: traceIndex[ti].map(i => solution[i][0]),\r\n                        y: traceIndex[ti].map(i => solution[i][1]),\r\n                    }\r\n                })\r\n                setPlotdata(traceData)\r\n\r\n                const layout = {...initLayout,\r\n                    xaxis: {\r\n                        title: {text: `PC1 (${Math.round(contribute[0]*1000)/10}%)`}\r\n                    },\r\n                    yaxis: {\r\n                        title: {text: `PC2 (${Math.round(contribute[1]*1000)/10}%)`}\r\n                    }\r\n                };\r\n                layout.shapes = feature.map(f=>({\r\n                    type: 'line',\r\n                    x0: f[0][0],\r\n                    y0: f[0][1],\r\n                    x1: f[1][0],\r\n                    y1: f[1][1]\r\n                }));\r\n                layout.annotations = feature.map(f=>({\r\n                    x: f[1][0],\r\n                    y: f[1][1],\r\n                    text: f.name,\r\n                    xanchor:'center',\r\n                    yanchor:'bottom',\r\n                }));\r\n\r\n                setLayout(layout)\r\n            }catch(e){\r\n                setPlotdata([])\r\n            }\r\n        });\r\n    },[dimensionKeys,data]);\r\n    // useEffect(()=>{\r\n    //     // const layout = {...initLayout};\r\n    //     // dimensionKeys.forEach((k,i)=> {\r\n    //     //     layout[`xaxis${i}`] = axis()\r\n    //     //     layout[`yaxis${i}`] = axis()\r\n    //     // })\r\n    //     // setLayout(layout)\r\n    // },[dimensionKeys])\r\n\r\n    // console.log(JSON.stringify(spec.data.values))\r\n    return (<Plot data={plotdata} style={{width: '100%',height:'100%'}} layout={layout} useResizeHandler={true}/>)\r\n\r\n}\r\n\r\nexport default Chart;\r\n\r\nfunction distance(a,b){\r\n    return Math.sqrt((a[1]-b[1])*(a[1]-b[1])+(a[0]-b[0])*(a[0]-b[0]));\r\n}\r\nfunction calculatePCA(dataIn,dimensions){\r\n\r\n    let pca = new PCA();\r\n    // console.log(brand_names);\r\n    let matrix = pca.scale(dataIn, true, true);\r\n\r\n    // let matrix = pca.scale(dataIn, false, false);\r\n\r\n    let pc = pca.pca(matrix,DIM);\r\n\r\n    let A = pc[0];  // this is the U matrix from SVD\r\n    let B = pc[1];  // this is the dV matrix from SVD\r\n    let chosenPC = pc[2];   // this is the most value of PCA\r\n    let S = pc[3];   // this is the most value of PCA\r\n    console.log(B)\r\n    let solution = dataIn.map((d,i)=>{\r\n        const dd = d3range(0,DIM).map(dim=>A[i][chosenPC[dim]]);\r\n        dd.data = d;\r\n        return dd\r\n    });\r\n    let xrange = d3extent(solution, d => d[0]);\r\n    let yrange = d3extent(solution, d => d[1]);\r\n\r\n    const root = [0,0]\r\n    const feature = dimensions.map(function (key, i) {\r\n        let brand = [root,d3range(0,DIM).map(dim=>B[i][chosenPC[dim]])];\r\n        brand.name = key;\r\n        return brand\r\n    });\r\n\r\n    debugger\r\n    let multiplyBrands = Math.sqrt(d3max([\r\n        distance(root,[xrange[0],yrange[0]]),\r\n        distance(root,[xrange[0],yrange[1]]),\r\n        distance(root,[xrange[1],yrange[0]]),\r\n        distance(root,[xrange[1],yrange[1]]),\r\n    ])/d3max(feature,d=>distance(root,[d[1][0],d[1][1]])));\r\n    feature.forEach(f=>{\r\n        f[1][0] = f[1][0]*multiplyBrands;\r\n        f[1][1] = f[1][1]*multiplyBrands;\r\n    });\r\n\r\n    const contributeMax = d3sum(S,(a,i)=>a[i]);\r\n    debugger\r\n    const contribute = d3range(0,DIM).map(d=>S[chosenPC[d]][chosenPC[d]]/contributeMax)\r\n\r\n    return {solution,feature,contribute};\r\n}\r\n","import {useSelector} from \"react-redux\";\r\nimport {\r\n    selectDatas\r\n} from \"../../store/actions/dataProcess\";\r\nimport {gridSpacing} from \"../../store/constant\";\r\nimport {Card, Grid, Typography, Box, Autocomplete, TextField, Stack, MenuItem} from \"@mui/material\";\r\nimport {lazy, useEffect, useState} from \"react\";\r\nimport {groups,extent as d3extent,min as d3min, max as d3max} from \"d3\";\r\nimport Loadable from '../../components/Loadable';\r\n\r\n\r\n// dashboard routing\r\n// const LineChart = Loadable(lazy(() => import('../../components/viz/lineChart')));\r\n// const RibbonChart = Loadable(lazy(() => import('../../components/viz/Ribbon')));\r\nimport LineChart from \"../../components/viz/lineChart\";\r\n// import LineChart from \"../../components/viz/lineChart/subplots\";\r\nimport RibbonChart from \"../../components/viz/Ribbon\";\r\nimport SplomChart from \"../../components/viz/Splom\";\r\nimport PCAChart from \"../../components/viz/PCA\";\r\n\r\n// fix this later\r\nconst Viz = ()=>{\r\n    const datas = useSelector(selectDatas);\r\n    const [nestData,stNestData] = useState([]);\r\n    const [dimension,setDimension] = useState([]);\r\n    const [dimensionDetail,setDimensionDetail] = useState({});\r\n    const [plotType,setPlotType] = useState('lines');\r\n    const [layout,setLayout] = useState([]);\r\n    const [axis,setAxis] = useState([{label:'x',key:\"index\"},\r\n        {label:'y',key:\"voltage\"},\r\n        {label:'z',key:null,is3D:true},\r\n        {label:'color',key:null},\r\n        {label:'dim',key:[],is3D:true},\r\n    ]);\r\n        // {key:\"gpu_usage\"}]);\r\n    // need to move this in the future\r\n    useEffect(()=>{\r\n        const newProfile = groups(datas,d=>d.Profile);\r\n        const positionK = {};\r\n        const flatdata = [];\r\n        const newdata = newProfile.map(([p,pd])=>{\r\n            const app = Object.keys(positionK).map(k=>[k,[]]);\r\n            pd.forEach(d=>{\r\n                if (positionK[d.AppName]===undefined){\r\n                    positionK[d.AppName] = app.length;\r\n                    app[positionK[d.AppName]]=[d.AppName,[]];\r\n                }\r\n                app[positionK[d.AppName]][1].push(d);\r\n                flatdata.push(d.data);\r\n            })\r\n            return [p,app]\r\n        })\r\n        stNestData(newdata);\r\n        const dimensionDetail = {};\r\n        if (datas[0]&&datas[0].data&&datas[0].data[0]) {\r\n            let dim = Object.keys(datas[0].data[0]);\r\n            dim.forEach(k=>{\r\n                dimensionDetail[k] = [+Infinity,-Infinity];\r\n                const ex = flatdata.map(d=>d3extent(d,d=>+d[k]));\r\n                dimensionDetail[k] = [d3min(ex,d=>d[0]),d3max(ex,d=>d[1])];\r\n            })\r\n            setDimension(dim)\r\n        }else\r\n            setDimension([]);\r\n        setDimensionDetail(dimensionDetail);\r\n    },[datas]);\r\n    const onChangeAxis = (key,value)=>{\r\n        axis[key].key = value;\r\n        setAxis([...axis])\r\n    }\r\n    const largeLayout = ((plotType==='markers')||(plotType==='lines')||(plotType==='Splom'));\r\n    const renderAxis = ()=>{\r\n        switch (plotType){\r\n            case 'markers':\r\n            case 'lines':\r\n                return axis.map((a,i)=><Autocomplete value={a.key} key={a.label}\r\n                                                     size={\"small\"}\r\n                                                     sx={{minWidth:200,display:a.is3D ?'none':undefined}}\r\n                                                     options={dimension}\r\n                                                     onChange={(event, newValue) => onChangeAxis(i, newValue)}\r\n                                                     renderInput={(params) => <TextField {...params} label={a.label}/>}/>)\r\n            case 'Splom':\r\n            case 'pca':\r\n                return <Autocomplete value={axis[4].key}\r\n                                     multiple\r\n                                     size={\"small\"}\r\n                                     options={dimension}\r\n                                     onChange={(event, newValue) => onChangeAxis(4, newValue)}\r\n                                     renderInput={(params) => <TextField {...params} label={axis[4].label}/>}/>\r\n            default:\r\n                return axis.map((a,i)=><Autocomplete value={a.key} key={a.label}\r\n                                                     size={\"small\"}\r\n                                                     sx={{minWidth:200,display:a.label==='color' ?'none':undefined}}\r\n                                                     options={dimension}\r\n                                                     onChange={(event, newValue) => onChangeAxis(i, newValue)}\r\n                                                     renderInput={(params) => <TextField {...params} label={a.label}/>}/>)\r\n        }\r\n    }\r\n    const renderPlots = ([profile,pData])=>{\r\n        switch (plotType){\r\n            case 'markers':\r\n            case 'lines':\r\n                return <Grid container>\r\n                    {pData.map(([app, appData],i) => <Grid key={`${profile} ${app}`} item xs={4}\r\n                                                           sx={{height: 200, mb: 3}}>\r\n                        <Typography variant={'h5'} textAlign={'center'}>{app}</Typography>\r\n                        {appData[0] &&\r\n                            <LineChart data={appData[0]?.data} xKey={axis[0].key} yKey={axis[1].key}\r\n                                       cKey={axis[3].key}\r\n                                       colorDomain={dimensionDetail[axis[3].key]}\r\n                                       getArr={([k,t])=>t[0]?t[0].data:[]}\r\n                                       getName={([k,t])=>k}\r\n                                       mode={plotType}\r\n                                       showscale={i===2}\r\n                            />}\r\n                    </Grid>)}\r\n                </Grid>\r\n            case 'Splom':\r\n                return <SplomChart\r\n                    getArr={([k,t])=>t[0]?t[0].data:[]}\r\n                    getName={([k,t])=>k}\r\n                    data={pData}\r\n                    dimensionKeys={axis[4].key}\r\n                />\r\n            case 'pca':\r\n                return <PCAChart\r\n                    getArr={([k,t])=>t[0]?t[0].data:[]}\r\n                    getName={([k,t])=>k}\r\n                    data={pData}\r\n                    dimensionKeys={axis[4].key}\r\n                />\r\n            case 'Ribbon':\r\n                return <RibbonChart\r\n                    getArr={([k,t])=>t[0]?t[0].data:[]}\r\n                    getName={([k,t])=>k}\r\n                    data={pData}\r\n                    xKey={axis[0].key}\r\n                    yKey={axis[1].key}\r\n                    zKey={axis[2].key}\r\n                    cKey={axis[3].key}\r\n                />\r\n            default:\r\n                return <>Not support yet</>\r\n        }\r\n    }\r\n    return(\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12} >\r\n                <Stack spacing={2} direction={\"row\"}>\r\n                    <TextField\r\n                        select\r\n                        label=\"Plot type\"\r\n                        size=\"small\"\r\n                        sx={{minWidth:200}}\r\n                        value={plotType}\r\n                        onChange={(event)=>setPlotType(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'markers'}>\r\n                            Scatter plot\r\n                        </MenuItem>\r\n                        <MenuItem value={'lines'}>\r\n                            Line chart\r\n                        </MenuItem>\r\n                        <MenuItem value={'Ribbon'}>\r\n                            3D scatter plot\r\n                        </MenuItem>\r\n                        <MenuItem value={'Splom'}>\r\n                            Splom\r\n                        </MenuItem>\r\n                        <MenuItem value={'pca'}>\r\n                            PCA\r\n                        </MenuItem>\r\n                    </TextField>\r\n                {renderAxis()}\r\n                </Stack>\r\n            </Grid>\r\n            {\r\n                nestData.map(([profile,pData])=>(<Grid item key={profile} xs={largeLayout?12:6} >\r\n                    <Card>\r\n                        <Box sx={{ p: 2, pl: 2 }}>\r\n                            <Typography variant={'h3'}>{profile}</Typography>\r\n                            {\r\n                                renderPlots([profile,pData])\r\n                            }\r\n                        </Box>\r\n                    </Card>\r\n                </Grid>))\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Viz;"],"names":["initData","domain","undefined","layout","title","text","pad","margin","t","l","b","r","data","xKey","yKey","cKey","colorDomain","mode","showscale","useTransition","startTransition","useState","plotdata","setPlotdata","colordata","setColordata","useEffect","x","y","forEach","d","push","map","plotopt","type","console","log","length","marker","color","colorscale","colorbarTitleText","colorbarThickness","cmin","cmax","style","width","height","useResizeHandler","getArr","getName","zKey","traceData","z","name","useMemo","size","scene","xaxis","yaxis","zaxis","initLayout","hovermode","dragmode","plot_bgcolor","grid","roworder","dimensionKeys","setLayout","dimensions","k","label","values","line","i","axis","showline","zeroline","gridcolor","ticklen","PCA","mean","X","transpose","row","d3","dot","Y","col","v","zeros","j","sub","assert","w","this","scale","center","m","s","V","mul","Math","sqrt","std","pca","npc","USV","A","temp","prec","pow","tolerance","itmax","c","u","slice","n","e","q","pythag","a","abs","f","g","h","iteration","test_convergence","l1","U","S","svd","diag","pcXV","pcUdS","prod","trunc","zero","reduce","same","twomost","ipc","parseInt","DIM","dataIn","traceIndex","ti","item","matrix","pc","B","chosenPC","solution","dd","d3range","dim","xrange","d3extent","yrange","root","feature","key","brand","multiplyBrands","d3max","distance","contributeMax","d3sum","contribute","calculatePCA","round","shapes","x0","y0","x1","y1","annotations","xanchor","yanchor","datas","useSelector","selectDatas","nestData","stNestData","dimension","setDimension","dimensionDetail","setDimensionDetail","plotType","setPlotType","is3D","setAxis","newProfile","groups","Profile","positionK","flatdata","newdata","p","pd","app","Object","keys","AppName","Infinity","ex","d3min","onChangeAxis","value","largeLayout","renderPlots","profile","pData","Grid","container","appData","xs","sx","mb","Typography","variant","textAlign","Splom","Ribbon","spacing","gridSpacing","Stack","direction","TextField","select","minWidth","onChange","event","target","MenuItem","Autocomplete","display","options","newValue","renderInput","params","multiple","renderAxis","Card","Box","pl"],"sourceRoot":""}